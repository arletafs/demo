{
	"info": {
		"_postman_id": "54db59da-b435-425c-b564-53bb5c25a6ee",
		"name": "api-testing",
		"description": "List of emails being covered:\n\n[https://www.notion.so/seez/Emails-c4a895a1dad04b09aed4c784a09209d6](https://www.notion.so/seez/Emails-c4a895a1dad04b09aed4c784a09209d6)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12809161"
	},
	"item": [
		{
			"name": "retrieve_test_data",
			"item": [
				{
					"name": "customer_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('customer_id', res.data.users.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query users {\n                users(page: 1 perPage: 1 filter: \"{{customer_email}}\") {\n                    nodes { id }\n                }\n            }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "retail_lead_listing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('retail_lead_listing_id', res.data.listings.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query listings($payload: ListingFiltersInput) { listings (page: 1 perPage: 1 filter: $payload) {\n                    nodes { id }\n                }}",
								"variables": "{\"payload\":{\"freeText\":\"{{retail_lead_listing_ref}}\",\"targetSiteIds\":[{{targetsite_id}}],\"available\":null}} "
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "lease_lead_listing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('leasing_lead_listing_id', res.data.listings.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query listings($payload: ListingFiltersInput) { listings (page: 1 perPage: 1 filter: $payload) {\n                    nodes { id }\n                }}",
								"variables": "{\"payload\":{\"freeText\":\"{{lease_lead_listing_ref}}\",\"targetSiteIds\":[{{targetsite_id}}],\"available\":null}} "
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "wholesale_lead_listing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('wholesale_lead_listing_id', res.data.listings.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "sm",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query filteredListings($filter: ListingFiltersInput $page: Int) { listings (filter: $filter page: $page perPage: 1 ) { nodes { id }}}\n",
								"variables": "{\n        \"filter\": {\n        \"freeText\":\"{{wholesale_lead_listing_ref}}\",\n        \"sort\":\"created_date\",\n        \"prices\":{\n            \"type\":\"wholesale\"\n            }\n            },\n    \"page\":1\n    }"
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "test_drive_listing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('test_drive_listing_id', res.data.listings.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query listings($payload: ListingFiltersInput) { listings (page: 1 perPage: 1 filter: $payload) {\n                    nodes { id }\n                }}",
								"variables": "{\"payload\":{\"freeText\":\"{{test_drive_listing_ref}}\",\"targetSiteIds\":[{{targetsite_id}}],\"available\":null}} "
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "tradein_listing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('tradein_listing_id', res.data.listings.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query listings($payload: ListingFiltersInput) { listings (page: 1 perPage: 1 filter: $payload) {\n                    nodes { id }\n                }}",
								"variables": "{\"payload\":{\"freeText\":\"{{tradein_listing_ref}}\",\"targetSiteIds\":[{{targetsite_id}}],\"available\":null}} "
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "order_listing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store it as a collection variable",
									"let res = pm.response.json();",
									"pm.collectionVariables.set('order_listing_id', res.data.listings.nodes[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query listings($payload: ListingFiltersInput) { listings (page: 1 perPage: 1 filter: $payload) {\n                    nodes { id }\n                }}",
								"variables": "{\"payload\":{\"freeText\":\"{{order_listing_ref}}\",\"targetSiteIds\":[{{targetsite_id}}],\"available\":null}} "
							}
						},
						"url": {
							"raw": "{{api-url}}/api",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				}
			],
			"description": "We're using the same customer email and listing's dealer reference for all test environments (dev, demo). This folder contains requests to retrieve customer ID and listings IDs for specified environment given the email/dealer reference."
		},
		{
			"name": "order_tradein_offer_accepted",
			"item": [
				{
					"name": "create_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let order_id = res.data.createOrder.id;",
									"",
									"// verify order is created",
									"pm.test(`Order is created: ${order_id}`, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('order_id', res.data.createOrder.id);",
									"pm.collectionVariables.set('customer_id', res.data.createOrder.customer.id);",
									"pm.collectionVariables.set('order_sales_id_old', res.data.createOrder.dealerSalesRep.id);",
									"pm.collectionVariables.set('order_sales_email_old', res.data.createOrder.dealerSalesRep.email);",
									"pm.collectionVariables.set('order_sales_name_old', res.data.createOrder.dealerSalesRep.name);",
									"pm.collectionVariables.set('order_dealer_id', res.data.createOrder.listing.referenceNumber);",
									"pm.collectionVariables.set('order_source', res.data.createOrder.listing.targetSite.name);",
									"pm.collectionVariables.set('order_listing_id', res.data.createOrder.listing.id);",
									"pm.collectionVariables.set('order_listing_make', res.data.createOrder.listing.brand.name);",
									"pm.collectionVariables.set('order_listing_model', res.data.createOrder.listing.model.name);",
									"pm.collectionVariables.set('order_listing_year', res.data.createOrder.listing.year);",
									"pm.collectionVariables.set('order_listing_showroom', res.data.createOrder.listing.showroom.name);",
									"pm.collectionVariables.set('order_listing_dealership_id', res.data.createOrder.listing.dealership.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrder($payload: CreateOrderInput) { createOrder( input: $payload ) { \n    id customer { id } dealerSalesRep { id email name } listing { id referenceNumber dealership { id } targetSite { name } brand { name } model { name } showroom { name } year } } }",
								"variables": "{\n    \"payload\": {\n      \"listingId\": \"{{order_listing_id}}\",\n      \"customerId\": \"{{customer_id}}\"\n    }\n  }"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_order_personal_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let order_id = res.data.updateCustomerInfo.id;",
									"",
									"// verify order is updated",
									"pm.test(`Order is updated: ${order_id}`, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('customer_name', res.data.updateCustomerInfo.name);",
									"pm.collectionVariables.set('customer_id', res.data.updateCustomerInfo.customer.id);",
									"pm.collectionVariables.set('customer_phone', res.data.updateCustomerInfo.phone);",
									"pm.collectionVariables.set('customer_email', res.data.updateCustomerInfo.email);",
									"pm.collectionVariables.set('customer_insurance', res.data.updateCustomerInfo.insurance);",
									"pm.collectionVariables.set('customer_cpr', res.data.updateCustomerInfo.nationalID);",
									"pm.collectionVariables.set('customer_address_street', res.data.updateCustomerInfo.address.street);",
									"pm.collectionVariables.set('customer_address_street2', res.data.updateCustomerInfo.address.street2);",
									"pm.collectionVariables.set('customer_address_street_name', res.data.updateCustomerInfo.address.streetName);",
									"pm.collectionVariables.set('customer_address_street_no', res.data.updateCustomerInfo.address.streetNumber);",
									"pm.collectionVariables.set('customer_address_country', res.data.updateCustomerInfo.address.country);",
									"pm.collectionVariables.set('customer_address_postcode', res.data.updateCustomerInfo.address.postalCode);",
									"pm.collectionVariables.set('customer_address_city', res.data.updateCustomerInfo.address.city);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateCustomerInfo($payload:CustomerInfoInput) {\n    updateCustomerInfo( orderId: \"{{order_id}}\" input: $payload ) { \n    name firstName middleName lastName phone email insurance insuranceDetails { id price state } nationalID age address { floor city street street2 streetName streetNumber country state postalCode data } customer { id } state } }",
								"variables": "{\n    \"payload\":{\n        \"insurance\":\"Alka\",\n        \"insuranceDetails\":\n        {\n            \"id\":null,\n            \"price\":null,\n            \"state\":null\n            },\n        \"nationalID\":\"0204870101\",\n        \"age\":\"36\",\n        \"address\":\n            {\n                \"floor\":null,\n                \"city\":\"Taastrup\",\n                \"street\":\"Akelejehaven 43\",\n                \"street2\":\"test address owner 1\",\n                \"streetName\":\"Tørringvej\",\n                \"streetNumber\":\"51\",\n                \"country\":\"Denmark\",\n                \"state\":null,\n                \"postalCode\":\"2630\",\n                \"data\":\"{\\\"dawa\\\":{\\\"id\\\":\\\"0a3f50bb-b0cd-32b8-e044-0003ba298018\\\",\\\"kvhx\\\":\\\"06302584__51_______\\\",\\\"status\\\":1,\\\"darstatus\\\":3,\\\"history\\\":{\\\"oprettet\\\":\\\"2000-02-05T18:57:20.000\\\",\\\"ændret\\\":\\\"2000-02-05T18:57:20.000\\\",\\\"ikrafttrædelse\\\":\\\"2000-02-05T18:57:20.000\\\",\\\"nedlagt\\\":null},\\\"floor\\\":null,\\\"door\\\":null,\\\"addressDesignation\\\":\\\"Tørringvej 51, Ildved, 7160 Tørring\\\",\\\"accessAddress\\\":{\\\"id\\\":\\\"0a3f508f-e4c2-32b8-e044-0003ba298018\\\",\\\"addressDesignation\\\":\\\"Tørringvej 51, Ildved, 7160 Tørring\\\",\\\"kvh\\\":\\\"06302584__51\\\",\\\"status\\\":1,\\\"darstatus\\\":3,\\\"road\\\":{\\\"name\\\":\\\"Tørringvej\\\",\\\"addressingName\\\":\\\"Tørringvej\\\",\\\"code\\\":\\\"2584\\\"},\\\"streetNumber\\\":\\\"51\\\",\\\"namedRoad\\\":{\\\"id\\\":\\\"f9215edc-753a-46cc-8fa9-a8e4249b6b46\\\"},\\\"additionalTownName\\\":\\\"Ildved\\\",\\\"additionalTownName2\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/supplerendebynavne2/679061\\\",\\\"dagi_id\\\":\\\"679061\\\"},\\\"postalCode\\\":{\\\"number\\\":\\\"7160\\\",\\\"name\\\":\\\"Tørring\\\"},\\\"stormodtagerPostalCode\\\":null,\\\"municipality\\\":{\\\"code\\\":\\\"0630\\\",\\\"name\\\":\\\"Vejle\\\"},\\\"ejerlav\\\":{\\\"kode\\\":1120854,\\\"navn\\\":\\\"Ildved By, Hvejsel\\\"},\\\"propertyIdentificationNumber\\\":\\\"7157\\\",\\\"matrikelnr\\\":\\\"5a\\\",\\\"history\\\":{\\\"oprettet\\\":\\\"2000-02-05T18:57:20.000\\\",\\\"ændret\\\":\\\"2018-07-04T18:00:00.000\\\",\\\"ikrafttrædelse\\\":\\\"2000-02-05T18:57:20.000\\\",\\\"nedlagt\\\":null},\\\"accessPoint\\\":{\\\"id\\\":\\\"0a3f508f-e4c2-32b8-e044-0003ba298018\\\",\\\"koordinater\\\":[9.47206187,55.82301205],\\\"højde\\\":106.1,\\\"nøjagtighed\\\":\\\"A\\\",\\\"kilde\\\":5,\\\"tekniskstandard\\\":\\\"TN\\\",\\\"tekstretning\\\":108.97,\\\"ændret\\\":\\\"2003-08-06T00:00:00.000\\\"},\\\"roadPoint\\\":{\\\"id\\\":\\\"18ea1211-af45-11e7-847e-066cff24d637\\\",\\\"kilde\\\":\\\"Ekstern\\\",\\\"nøjagtighed\\\":\\\"B\\\",\\\"tekniskstandard\\\":\\\"V1\\\",\\\"koordinater\\\":[9.4743581,55.82262188],\\\"ændret\\\":\\\"2018-05-03T14:08:02.125\\\"},\\\"DDKN\\\":{\\\"m100\\\":\\\"100m_61864_5295\\\",\\\"km1\\\":\\\"1km_6186_529\\\",\\\"km10\\\":\\\"10km_618_52\\\"},\\\"parish\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/sogne/9188\\\",\\\"kode\\\":\\\"9188\\\",\\\"navn\\\":\\\"Hvejsel\\\"},\\\"region\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/regioner/1083\\\",\\\"kode\\\":\\\"1083\\\",\\\"navn\\\":\\\"Region Syddanmark\\\"},\\\"landsdel\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/landsdele/DK032\\\",\\\"nuts3\\\":\\\"DK032\\\",\\\"navn\\\":\\\"Sydjylland\\\"},\\\"judicialDistrict\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/retskredse/1155\\\",\\\"kode\\\":\\\"1155\\\",\\\"navn\\\":\\\"Retten i Kolding\\\"},\\\"policeDistrict\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/politikredse/1463\\\",\\\"kode\\\":\\\"1463\\\",\\\"navn\\\":\\\"Sydøstjyllands Politi\\\"},\\\"constituency\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/opstillingskredse/0056\\\",\\\"kode\\\":\\\"0056\\\",\\\"navn\\\":\\\"Vejle Nord\\\"},\\\"pollingDistrict\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/afstemningsomraader/630/25\\\",\\\"nummer\\\":\\\"25\\\",\\\"navn\\\":\\\"Kollerup-Sandvad Nord\\\"},\\\"electoralDistrict\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/storkredse/7\\\",\\\"nummer\\\":\\\"7\\\",\\\"navn\\\":\\\"Sydjylland\\\"},\\\"electoralRegion\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/valglandsdele/B\\\",\\\"bogstav\\\":\\\"B\\\",\\\"navn\\\":\\\"Sjælland-Syddanmark\\\"},\\\"zone\\\":\\\"Landzone\\\",\\\"parcel\\\":{\\\"href\\\":\\\"https://api.dataforsyningen.dk/jordstykker/1120854/5a\\\",\\\"ejerlav\\\":{\\\"kode\\\":1120854,\\\"navn\\\":\\\"Ildved By, Hvejsel\\\",\\\"href\\\":\\\"https://api.dataforsyningen.dk/ejerlav/1120854\\\"},\\\"matrikelnr\\\":\\\"5a\\\",\\\"esrejendomsnr\\\":\\\"7157\\\"},\\\"settlements\\\":[{\\\"id\\\":\\\"12337669-b4e0-6b98-e053-d480220a5a3f\\\",\\\"kode\\\":null,\\\"type\\\":\\\"spredtBebyggelse\\\",\\\"navn\\\":\\\"Ildved Mark\\\",\\\"href\\\":\\\"https://api.dataforsyningen.dk/bebyggelser/12337669-b4e0-6b98-e053-d480220a5a3f\\\"}],\\\"bridgeConnected\\\":true}}}\"\n                }\n                }\n                }"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_order_second_owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let order_id = res.data.updateCoOwnerInfo.id;",
									"",
									"// verify order is updated",
									"pm.test(`Order is updated: ${order_id}`, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateCoOwnerInfo($payload:CustomerInfoInput) {\n    updateCoOwnerInfo( orderId: \"{{order_id}}\" input: $payload ) { \n    name firstName middleName lastName phone email insurance insuranceDetails { id price state } nationalID age address { floor city street street2 streetName streetNumber country state postalCode data } customer { id } state } }",
								"variables": "{\n    \"payload\":{\n        \"firstName\": \"Test\",\n        \"middleName\": \"Co\",\n        \"lastName\": \"Owner\",\n        \"phone\": \"12345670\",\n        \"email\": \"cypress+coowner@seez.co\",\n        \"nationalID\":\"0204870103\",\n        \"address\":\n            {\n                \"floor\":null,\n                \"city\":\"Tørring\",\n                \"street\":\"Tørringvej 51\",\n                \"street2\":\"test address co owner\",\n                \"streetName\":null,\n                \"streetNumber\":null,\n                \"country\":\"Denmark\",\n                \"state\":null,\n                \"postalCode\":\"7160\",\n                \"data\":null\n                }\n                }\n                }"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_tradein",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let order_id = res.data.createTradeIn.orderId;",
									"",
									"// verify order is updated",
									"pm.test(`Order is updated: ${order_id}`, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('order_tradein_id', res.data.createTradeIn.id);",
									"pm.collectionVariables.set('order_tradein_outstanding', res.data.createTradeIn.outstandingFinanceAmount);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createTradeIn($payload:TradeInInput) {\n    createTradeIn( input: $payload ) { \n    id orderId } }",
								"variables": "{\n    \"payload\":{\n        \"vin\":\"YS2R8X40005312511\",\n        \"licensePlate\":\"AA12345\",\n        \"make\":\"Scania\",\n        \"model\":\"R-serien\",\n        \"year\":2013,\n        \"variant\":\"R 560\",\n        \"registrationDate\":\"2013-03-18T00:00:00.000Z\",\n        \"kilometrage\":1200,\n        \"hasFinancing\":true,\n        \"outstandingFinanceAmount\":20000,\n        \"customerComment\":\"testing with postman\",\n        \"orderId\":\"{{order_id}}\",\n        \"carCondition\":\"good\",\n        \"fuelType\":\"Diesel\",\n        \"color\":\"White\",\n        \"registrationType\":\"Personbiler\",\n        \"accident\":false,\n        \"numberOfKeys\":4,\n        \"serviceType\":\"full\",\n        \"pictures\":[\n                {\"type\":\"other\",\"url\":\"https://logohistory.net/wp-content/uploads/2023/01/Scania-Logo.png\"},\n                {\"type\":\"other\",\"url\":\"https://logohistory.net/wp-content/uploads/2023/01/Scania-Logo.png\"},\n                {\"type\":\"other\",\"url\":\"https://logohistory.net/wp-content/uploads/2023/01/Scania-Logo.png\"},\n                {\"type\":\"other\",\"url\":\"https://logohistory.net/wp-content/uploads/2023/01/Scania-Logo.png\"}\n                ]\n}\n}"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_payment_financing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let order_id = res.data.createPayment.orderId;",
									"",
									"// verify order is updated",
									"pm.test(`Order is updated: ${order_id}`, function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation { createPayment( orderId: \"{{order_id}}\" input: { type: financing } ) { type state financing { returnUrl state correlationId redirectUrl loanAmount downPayment paymentTerms maxPaymentTerms downPaymentPct totalPayable totalLoanCost monthlyPayment nominalInterestRate interestType interestTypes interestRate apr pricing { vehiclePrice addonsPrice discount downPayment loanAmount } aopBeforeTax downPaymentPct financedAmount nominalInterestRate totalLoanCost interestType interestRate totalPayable financingType financingSteps { key tooltipKey type status } featureFlags { hasApi requireManualSubmition loanDecision } } bankTransfer { state amountReceived pricing { downPayment vehiclePrice valueAddedServicesPrice addonsPrice tradeInAmount discount total final } onDelivery } } }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "select_showroom_pickup",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url = pm.environment.get('api-url');",
									"const order_listing_dealership_id = pm.collectionVariables.get('order_listing_dealership_id');",
									"",
									"// get the list of available showrooms",
									"const query_showroom = {",
									"    url: `${url}`,",
									"    method: 'POST',",
									"    headers: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: JSON.stringify({",
									"        query: `",
									"            query {",
									"                showrooms(dealershipIds: ${order_listing_dealership_id}) {",
									"                    id",
									"                    address",
									"                }",
									"            }",
									"        `",
									"    })",
									"};",
									"",
									"// store a showroom id from the list",
									"pm.sendRequest(query_showroom, function (err, res) {",
									"    if (err) {",
									"        console.log(err);",
									"    } else {",
									"        const responseData = JSON.parse(res.text());",
									"        pm.collectionVariables.set('order_delivery_showroom_id', responseData.data.showrooms[0].id);",
									"        pm.collectionVariables.set('order_delivery_address', responseData.data.showrooms[0].address);",
									"        ",
									"}});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is updated",
									"pm.test(`Order is updated`, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('order_delivery_type', res.data.updateDelivery.type);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateDelivery($payload: DeliveryInput) { updateDelivery( orderId: \"{{order_id}}\" input: $payload ) { type preferredDate deliveryDate { startTime length } orderReadyDate { startTime length } address { id street street2 postalCode city state country } state licensePlate showroomId } }",
								"variables": "{\n    \"payload\":{\"preferredDate\":\"2023-09-13T13:00:00.000Z\",\"type\":\"showroom\",\"showroomId\":\"{{order_listing_showroom_id}}\"\n}\n}"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "submit_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is submitted`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.submitOrder.state).to.eql('submitted')",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation submitOrder{\n    submitOrder(orderId: \"{{order_id}}\") {\n        id state } }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "confirm_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is confirmed`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.confirmOrder.state).to.eql('confirmed')",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation confirmOrder{\n    confirmOrder(orderId: \"{{order_id}}\") {\n        id state } }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "submit_tradein_offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is updated`, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('order_tradein_offer', res.data.submitTradeInOffer.offerAmount);",
									"pm.collectionVariables.set('order_tradein_total', res.data.submitTradeInOffer.totalAmount);",
									"pm.collectionVariables.set('order_tradein_outstanding', res.data.submitTradeInOffer.outstandingFinanceAmount);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation submitTradeInOffer{\n    submitTradeInOffer(id: \"{{order_tradein_id}}\" offerAmount: 80000) {\n        offerAmount outstandingFinanceAmount totalAmount } }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "accept_tradein_offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is updated`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.acceptTradeInOffer.state).to.eql('accepted')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation acceptTradeInOffer{\n    acceptTradeInOffer(id: \"{{order_tradein_id}}\") {\n        state} }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_transferrable_amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is updated`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.updatePayment.bankTransfer.amountReceived).to.eql(25980)",
									"});",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('order_transferrable_amount', res.data.updatePayment.bankTransfer.amountReceived);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($payload: UpdatePaymentInput) {\n    updatePayment(orderId: \"{{order_id}}\" input: $payload) {\n        bankTransfer {\n            amountReceived\n        }\n        } }",
								"variables": "{\"payload\":{\"bankTransfer\":{\"amountReceived\":25980}}}"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "approve_loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is updated`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.updatePayment.financing.state).to.eql('approved')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($payload: UpdatePaymentInput) {\n    updatePayment(orderId: \"{{order_id}}\" input: $payload) {\n        financing { state }\n        } }",
								"variables": "{\"payload\":{\"financing\":{\"state\":\"approved\"}}}"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_delivery_date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is updated`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.updateDelivery.state).to.eql('deliveryDateConfirmed')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Get the current date",
									"let currentDate = new Date();",
									"",
									"// Calculate the date for the day after today",
									"let nextDay = new Date(currentDate);",
									"nextDay.setDate(currentDate.getDate() + 1);",
									"",
									"// Format the next day's date as ISO string",
									"let nextDayISOString = nextDay.toISOString();",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('next_date', nextDayISOString);",
									"",
									"let dateObj = new Date(nextDayISOString);",
									"let day = dateObj.getUTCDate().toString().padStart(2, '0');",
									"let month = (dateObj.getUTCMonth() + 1).toString().padStart(2, '0');",
									"let year = dateObj.getUTCFullYear();",
									"let formattedDate = `${day}-${month}-${year}`;",
									"",
									"// store values as environment variables",
									"pm.collectionVariables.set('next_date_formatted', formattedDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($payload: DeliveryInput) {\n    updateDelivery(orderId: \"{{order_id}}\" input: $payload) {\n        state\n        } }",
								"variables": "{\"payload\":{\"deliveryDate\":{\"startTime\":\"{{next_date}}\",\"length\":1}}}"
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "cancel_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify order is cancel",
									"pm.test(`Order is canceled`, function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.cancelOrder.state).to.eql('cancelled')",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation cancelOrder { cancelOrder(orderId: \"{{order_id}}\" cancellationReason: test ) { \n    id\n    state\n}\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_create_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.collectionVariables.get('is_email_found') === 'false') {",
									"    console.log('Tests skipped, email not found');",
									"}",
									"    else {",
									"        let res = pm.response.json();",
									"        let make = pm.collectionVariables.get('order_listing_make');",
									"        let model = pm.collectionVariables.get('order_listing_model');",
									"        let year = pm.collectionVariables.get('order_listing_year');",
									"        let order_id = pm.collectionVariables.get('order_id');",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerOrderCreated');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql('En ny ordre er blevet genereret på Starmark.dk');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email listing image`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/image/800x0/listings/'+pm.collectionVariables.get('order_listing_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify My Order link`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/min/ordrer');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`En ny ordre på ${make} ${model} ${year} er blevet oprettet`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Du er nu et skridt tættere på din nye bil');",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Vi har tildelt dit tilbud til en af vores salgseksperter, som vil hjælpe dig igennem købsprocessen');",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Du kan altid vende tilbage til din ordre ved at klikke nedenstående link');",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Få nedenstående fordele ved online køb hos Starmark');",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med tilbuddet, så fortæl os, hvordan vi kan hjælpe');",
									"        });",
									"",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"        });",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerOrderCreated', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerOrderCreated\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_dealer_order_created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.collectionVariables.get('is_email_found') === 'false') {",
									"    console.log('Tests skipped, email not found');",
									"}",
									"    else {",
									"        let res = pm.response.json();",
									"        let make = pm.collectionVariables.get('order_listing_make');",
									"        let model = pm.collectionVariables.get('order_listing_model');",
									"        let dealer_id = pm.collectionVariables.get('order_dealer_id');",
									"        let order_id = pm.collectionVariables.get('order_id');",
									"        let order_listing_id = pm.collectionVariables.get('order_listing_id');",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('DealerOrderCreated');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('order_sales_email_old'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email subject\"`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql('New order generated - #'+pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify source`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('source'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify seezpad url`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.environment.get('seezpad_url')+'/orders/summary?orderId='+pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify sales name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hej '+(pm.collectionVariables.get('order_sales_name_old')));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`En ny ordre er registreret på # ${order_listing_id} : ${make} - ${model},  til salg hos Mercedes Benz Starmark I/S, Dealer ID # ${dealer_id}`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Ordren er tildelt ordre # ${order_id}, og du er allokeret som den primære sælger på opgaven`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Ordren er åben og klar til behandling');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"        });",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let sales_email = pm.collectionVariables.get('order_sales_email_old');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, sales_email, 'DealerOrderCreated', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{order_sales_email_old}}\"]\n    notificationIds: [\"DealerOrderCreated\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_submit_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let make = pm.collectionVariables.get('order_listing_make');",
									"let model = pm.collectionVariables.get('order_listing_model');",
									"let year = pm.collectionVariables.get('order_listing_year');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerOrderSubmitted');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql('Din ordre anmodning er modtaget!');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email listing image`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/image/800x0/listings/'+pm.collectionVariables.get('order_listing_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify My Order link`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/min/ordrer');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Gode nyheder, ${customer_name}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Din ordre på en ${make} ${model}, årgang ${year}, er modtaget`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Tak for din interesse. Nedenfor kan du se status på din ordre');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Ansøg venligst om finansiering via dette link');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Vores team vil nu gennemgå din byttebil og du modtager');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('inden for 1 time en vurdering (inden for normal åbningstid)');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Brug dette link for at få adgang til din ordre, og upload de nødvendige dokumenter');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med tilbuddet, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify financing`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('https://api.scb.nu/SCBDK.Dealer.ExternalCalc/v2/ApplicationFlow/Submit?preApplicationKey=');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('https://starmark-dev.seez.dk/image/0x0/financing-providers/santander.png');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerOrderSubmitted', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerOrderSubmitted\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_dealer_order_submitted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.collectionVariables.get('is_email_found') === 'false') {",
									"    console.log('Tests skipped, email not found');",
									"}",
									"    else {",
									"        let res = pm.response.json();",
									"        let make = pm.collectionVariables.get('order_listing_make');",
									"        let model = pm.collectionVariables.get('order_listing_model');",
									"        let year = pm.collectionVariables.get('order_listing_year');",
									"        let dealer_id = pm.collectionVariables.get('order_dealer_id');",
									"        let order_id = pm.collectionVariables.get('order_id');",
									"        let order_listing_id = pm.collectionVariables.get('order_listing_id');",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('DealerOrderSubmitted');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('order_sales_email_old'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email subject\"`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(` Ordre indsendt - Byttebil til gennemsyn - ${make} ${model} `);",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify delivery type`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html.toLowerCase()).to.contain(pm.collectionVariables.get('order_delivery_type'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify source`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('source'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify delivery date`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('13-09-2023');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify delivery address`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_delivery_address'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify seezpad url`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.environment.get('seezpad_url')+'/orders/summary?orderId='+pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify sales name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hej '+(pm.collectionVariables.get('order_sales_name_old')));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`En ny ordre # ${order_id} er registreret på ${order_listing_id}, ${make} , ${model} ${year}`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`En byttebil er tilføjet til ordren`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Gå til SeezPad og giv et tilbud på kundens byttebil indenfor den næste time');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"        });",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let sales_email = pm.collectionVariables.get('order_sales_email_old');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, sales_email, 'DealerOrderSubmitted', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{order_sales_email_old}}\"]\n    notificationIds: [\"DealerOrderSubmitted\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_confirm_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let make = pm.collectionVariables.get('order_listing_make');",
									"let model = pm.collectionVariables.get('order_listing_model');",
									"let year = pm.collectionVariables.get('order_listing_year');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerOrderConfirmed');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql('Din bil er bekræftet!');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email listing image`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/image/800x0/listings/'+pm.collectionVariables.get('order_listing_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify My Order link`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/min/ordrer');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Gode nyheder, ${customer_name}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Din ordre på en ${make} ${model}, årgang ${year}, er bekræftet`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Tak for din interesse. Nedenfor kan du se status på din ordre');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Har du finansieringen på plads?');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Venligst upload de nødvendige dokumenter for at vi kan fortsætte');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Brug dette link for at få adgang til din ordre, og upload de nødvendige');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med tilbuddet, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify list of required documents`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Kørekort/Pas');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Sygesikring');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Registrerings attest på byttebil');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Evt. Restgældsdokumentation');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify financing`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('https://api.scb.nu/SCBDK.Dealer.ExternalCalc/v2/ApplicationFlow/Submit?preApplicationKey=');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('https://starmark-dev.seez.dk/image/0x0/financing-providers/santander.png');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerOrderConfirmed', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerOrderConfirmed\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_dealer_order_confirmed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.collectionVariables.get('is_email_found') === 'false') {",
									"    console.log('Tests skipped, email not found');",
									"}",
									"    else {",
									"        let res = pm.response.json();",
									"        let make = pm.collectionVariables.get('order_listing_make');",
									"        let model = pm.collectionVariables.get('order_listing_model');",
									"        let year = pm.collectionVariables.get('order_listing_year');",
									"        let dealer_id = pm.collectionVariables.get('order_dealer_id');",
									"        let order_id = pm.collectionVariables.get('order_id');",
									"        let order_listing_id = pm.collectionVariables.get('order_listing_id');",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('DealerOrderConfirmed');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('order_sales_email_old'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(` Ordre bekræftet - Byttebil til gennemsyn - ${make} ${model} `);",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify delivery type`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html.toLowerCase()).to.contain(pm.collectionVariables.get('order_delivery_type'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify source`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('source'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify delivery date`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('13-09-2023');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify delivery address`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_delivery_address'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify seezpad url`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.environment.get('seezpad_url')+'/orders/summary?orderId='+pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify sales name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hej '+(pm.collectionVariables.get('order_sales_name_old')));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`En ny ordre # ${order_id} er registreret på ${order_listing_id}, ${make} , ${model} ${year}`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`En byttebil er tilføjet til ordren`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Gå til SeezPad og giv et tilbud på kundens byttebil indenfor den næste time');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"        });",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let sales_email = pm.collectionVariables.get('order_sales_email_old');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, sales_email, 'DealerOrderConfirmed', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{order_sales_email_old}}\"]\n    notificationIds: [\"DealerOrderConfirmed\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_tradein_offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let make = pm.collectionVariables.get('order_listing_make');",
									"let model = pm.collectionVariables.get('order_listing_model');",
									"let year = pm.collectionVariables.get('order_listing_year');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"let order_tradein_total = pm.collectionVariables.get('order_tradein_total');",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerTradeInOfferSubmitted');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`Dit indbytningstilbud er på ${order_tradein_total} kr`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify My Order link`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/min/ordrer');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify trade in offer`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_tradein_offer'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify outstanding financing`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_tradein_outstanding'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify trade in total`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_tradein_total'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`${customer_name}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Din henvendelse angående byttebil, er blevet gennemgået');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Byttebils vurdering');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Restgæld i byttebil');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Byttebils værdi');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Tilbuddet er gældende forudsat');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Du er den retmæssige ejer af bilen eller er autoriseret til at sælge den');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Bilen matcher den beskrivelse, du har givet os');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Du ikke sælger bilen i erhvervsmæssig egenskab');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Bilen ikke har været brugt erhvervsmæssigt fx som taxa');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Bilen ikke har mekaniske eller elektriske fejl');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Bilen ikke har været involveret i en større ulykke');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Bilen består det eftersyn, vi gennemfører');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Brugeren garanterer overfor Starmark, at de oplysninger han/hun har leveret til Starmark er korrekte og retvisende. Brugeren refunderer Starmark fuldt ud for eventuelle tab, udgifter og skader, som er lidt på bagrund af forkerte oplysninger, som brugeren har angivet');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med ordren, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerTradeInOfferSubmitted', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerTradeInOfferSubmitted\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_dealer_tradein_accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.collectionVariables.get('is_email_found') === 'false') {",
									"    console.log('Tests skipped, email not found');",
									"}",
									"    else {",
									"let res = pm.response.json();",
									"let dealer_id = pm.collectionVariables.get('order_dealer_id');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"let customer_id = pm.collectionVariables.get('customer_id');",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('DealerOrderTradeInOffer');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('order_sales_email_old'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`${customer_name} has accepted the trade-in offer.`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html.toLowerCase()).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html.toLowerCase()).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html.toLowerCase()).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify source`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('source'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify seezpad url`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.environment.get('seezpad_url')+'/orders/summary?orderId='+pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify sales name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hej '+(pm.collectionVariables.get('order_sales_name_old')));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`${customer_name} har accepted tilbuddet på sin byttebil`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Gå til SeezPad for at se de fulde detaljer på ordren`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let sales_email = pm.collectionVariables.get('order_sales_email_old');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, sales_email, 'DealerOrderTradeInOffer', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{order_sales_email_old}}\"]\n    notificationIds: [\"DealerOrderTradeInOffer\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_money_received",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let make = pm.collectionVariables.get('order_listing_make');",
									"let model = pm.collectionVariables.get('order_listing_model');",
									"let year = pm.collectionVariables.get('order_listing_year');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"let order_tradein_total = pm.collectionVariables.get('order_tradein_total');",
									"let order_transferrable_amount_raw = pm.collectionVariables.get('order_transferrable_amount');",
									"let order_transferrable_amount = order_transferrable_amount_raw.toLocaleString(\"de-DE\");",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerPaymentStatusUpdated');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`Din bankoverførsel er modtaget`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify My Order link`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('/min/ordrer');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Hej ${customer_name}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Din bankoverførsel er modtaget!');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`har modtaget din overførsel på ${order_transferrable_amount}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Din bil bliver nu sendt til vores klargøring, og vi holder dig løbende orienteret frem mod leveringen');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med ordren, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerPaymentStatusUpdated', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerPaymentStatusUpdated\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_loan_approved",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"let order_tradein_offer = pm.collectionVariables.get('order_tradein_offer').toLocaleString(\"de-DE\");",
									"let order_tradein_outstanding = pm.collectionVariables.get('order_tradein_outstanding').toLocaleString(\"de-DE\");",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerLoanApproved');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`Dit billån er godkendt!`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify listing showroom`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_listing_showroom'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify Bank name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Sydbank');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify Bank account`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('2017937');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify Bank reg number`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('7030');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify Bank reference`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('550026');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify Trade In offer`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`${order_tradein_offer}`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify outstanding amount`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`20.000`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Tillykke ${customer_name}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Din låneansøgning er blevet godkendt');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Du kan nu fortsætte og overføre din udbetaling til nedenstående konto`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Giv os venligst besked, når du har overført beløbet');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med ordren, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerLoanApproved', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerLoanApproved\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_add_delivery_date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let make = pm.collectionVariables.get('order_listing_make');",
									"let model = pm.collectionVariables.get('order_listing_model');",
									"let year = pm.collectionVariables.get('order_listing_year');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"let order_tradein_total = pm.collectionVariables.get('order_tradein_total');",
									"let delivery_date = pm.collectionVariables.get('next_date_formatted');",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerCreateDeliveryDate');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`Din bil er på vej! Den vil blive leveret d. ${delivery_date}`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Leveringsbekræftelse af din`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Den endelige leveringsdato for din nye - er nu bekræftet af vores ordreteam. Jeg glæder mig til');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`at levere den til dig d. ${delivery_date}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Dagen inden levering sender jeg dig nogle praktiske informationer omkring byttebil og');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Jeg glæder mig til at se dig`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med ordren, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerCreateDeliveryDate', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerCreateDeliveryDate\"]\n    page: 1\n    perPage: 2\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_customer_delivery_reminder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"let make = pm.collectionVariables.get('order_listing_make');",
									"let model = pm.collectionVariables.get('order_listing_model');",
									"let year = pm.collectionVariables.get('order_listing_year');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"let customer_name = pm.collectionVariables.get('customer_name');",
									"let customer_id = pm.collectionVariables.get('customer_id');",
									"let order_tradein_total = pm.collectionVariables.get('order_tradein_total');",
									"let delivery_date = pm.collectionVariables.get('next_date_formatted');",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('CustomerDeliveryDateReminder');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('customer_email'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`Så er der ikke længe til! Din bil leveres d. ${delivery_date}`);",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify contact support`, function () {",
									"    pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('contact_support'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Vi glæder os til at aflevere din nye bil!`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Her er lidt praktiske informationer fra os');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Kære Mads');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Det er næsten blevet tid, til at hente din nye , ${make}`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`${model}. Jeg har afsat tid til at vise, og sætte dig ind i alle de funktioner og`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('udstyr din nye bil har, såfremt du ønsker det. Nedenfor kan du se en huskeliste over vigtige ting');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('forud for afleveringen og betalingen.');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Jeg glæder mig til at overrække dig nøglerne til din nye bil!`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('COVID-19 FORBEHOLD:');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Grundet de nuværende restriktioner vil det desværre ikke være');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('muligt at overlevere bilen som normalt. Udleveringen vil derfor primært foregå uden for bilen og med den');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('foreskrevne afstand. Vi håber på din forståelse herfor');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Betaling kan ske ved bankoverførsel til konto`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`${customer_id}, senest på selve dagen og`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`gerne dagen før`);",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Referer venligst til bilens vognnummer i overførslen');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Ved en eventuel byttebil, er det vigtigt at du gennemgår og husker nedenstående');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('punkter, inden du skal afhente din nye bil. Har du ikke en byttebil, skal du naturligvis blot se bort fra');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Ekstra nøgle(r)');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Husk at medbringe alle ekstranøgler');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Registreringsattest');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Husk at medbringe begge dele af registreringsattesten (del 1 +');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Instruktions- og servicebøger');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Husk at medbringe både instruktions- og servicebøger');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Eventuelle ekstra hjul');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Husk at medbringe eventuelle vinter-/sommerfælge');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Forbind til Mercedes Me Connect');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Mercedes Me Connect, så anbefaler vi, at du husker at');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('oprette den hurtigst muligt. Me Connect kan hjælpe');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('med en masse funktioner direkte fra din');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('telefon. F.eks. kan du se historik over brændstofforbrug');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('servicemeddelelser og meget mere');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('kan forbinde din bil og læse mere her');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('https://shop.mercedes-benz.com/da-dk/connect/');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Har du problemer med at oprette forbindelse eller spørgsmål, er');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('velkommen til at kontakte Me Connect kundesupport på tlf. 3378 5550');",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hvis du har problemer med ordren, så fortæl os, hvordan vi kan hjælpe');",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"  pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"});",
									"",
									"pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"      pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let customer_email = pm.collectionVariables.get('customer_email');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, customer_email, 'CustomerDeliveryDateReminder', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{customer_email}}\"]\n    notificationIds: [\"CustomerDeliveryDateReminder\"]\n    page: 1\n    perPage: 2\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "assign_order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res = pm.response.json();",
									"",
									"// verify new sales person. is assigned",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(res.data.setDealerSalesRep.dealerSalesRep.email).to.eql(pm.collectionVariables.get('order_sales_email_new'))",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url = pm.environment.get('api-url');",
									"const listing_id = pm.collectionVariables.get('order_listing_id');",
									"",
									"// get available sales people to assign to",
									"const query_sales = {",
									"    url: `${url}`,",
									"    method: 'POST',",
									"    headers: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: JSON.stringify({",
									"        query: `",
									"            query {",
									"                dealerSalesReps(listingId: ${listing_id}) {",
									"                    id",
									"                    email",
									"                    name",
									"                }",
									"            }",
									"        `",
									"    })",
									"};",
									"",
									"// get a sales person that is not an assignee to the lead, then store it as an environment variable",
									"pm.sendRequest(query_sales, function (err, res) {",
									"    if (err) {",
									"        console.log(err);",
									"    } else {",
									"        const responseData = JSON.parse(res.text());",
									"",
									"        const oldSalesEmail = pm.collectionVariables.get('order_sales_email_old');",
									"        let newSalesEmail = oldSalesEmail;",
									"",
									"        // Loop through the dealerSalesReps array in the response",
									"        for (const salesRep of responseData.data.dealerSalesReps) {",
									"            if (salesRep.email !== oldSalesEmail) {",
									"                newSalesId = salesRep.id;",
									"                newSalesEmail = salesRep.email;",
									"                newSalesName = salesRep.name;",
									"                break; // Exit the loop when a different email is found",
									"            }",
									"        }",
									"",
									"        // store it as an environment variable",
									"        pm.collectionVariables.set('order_sales_id_new', newSalesId);",
									"        pm.collectionVariables.set('order_sales_email_new', newSalesEmail);",
									"        pm.collectionVariables.set('order_sales_name_new', newSalesName);",
									"    }",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Client-Id",
								"value": "pad",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setDealerSalesRep {\n  setDealerSalesRep(orderId: \"{{order_id}}\", userId: \"{{order_sales_id_new}}\") {\n    id\n    dealerSalesRep {\n      name\n      email\n    }\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_email_dealer_order_reassigned",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.collectionVariables.get('is_email_found') === 'false') {",
									"    console.log('Tests skipped, email not found');",
									"}",
									"    else {",
									"        let res = pm.response.json();",
									"        let order_id = pm.collectionVariables.get('order_id');",
									"        let order_listing_id = pm.collectionVariables.get('order_listing_id');",
									"        let make = pm.collectionVariables.get('order_listing_make');",
									"        let model = pm.collectionVariables.get('order_listing_model');",
									"        let order_listing_dealer_id = pm.collectionVariables.get('order_dealer_id');",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email name`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].notificationId).to.eql('DealerAssignedToOrder');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email sender`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].sender).to.eql(pm.collectionVariables.get('email_sender'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email recipient`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].recipient[0]).to.eql(pm.collectionVariables.get('order_sales_email_new'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email subject`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.subject).to.eql(`Ordre: ${order_id} - Du er blevet tildelt en ny ordre`);",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email logo and url`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo'))",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('starmark_logo_url'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify Order ID`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify customer id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('customer_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify sales person`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Hej '+(pm.collectionVariables.get('order_sales_name_new')));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify order id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify dealer id`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('order_dealer_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify source`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('source'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify seezpad url`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.environment.get('seezpad_url')+'/orders/summary?orderId='+pm.collectionVariables.get('order_id'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email content`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Du er blevet tildelt denne');",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`ordre er registreret på # ${order_listing_id} : ${make} - ${model}`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`til salg hos Mercedes Benz Starmark I/S, Dealer ID # ${order_listing_dealer_id}`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(`Ordren er tildelt ordre # ${order_id} , og du er allokeret som den primære sælger på opgaven`);",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain('Ordren er åben og klar til behandling');",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify footer links`, function () {",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('privacy'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('my_profile'));",
									"        pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(res.data.getNotifications.nodes[0].data.email.html).to.contain(pm.collectionVariables.get('copyright'));",
									"        });",
									"",
									"        pm.test(`Order ID: ${order_id} - Verify email style`, function () {",
									"            pm.expect(res.data.getNotifications.nodes[0].data.email.html).to.contain(\"<style>\\n    /* Elements */\\n    body {\\n      margin: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n    }\\n\\n    body,\\n    table,\\n    td,\\n    p,\\n    a,\\n    li,\\n    blockquote,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    span {\\n      font-family: 'helvetica';\\n    }\\n\\n    table {\\n      border-spacing: 0;\\n    }\\n\\n    td {\\n      padding: 0;\\n    }\\n\\n    img {\\n      border: 0;\\n    }\\n\\n    h1 {\\n      font-size: 22px;\\n      margin: 0;\\n    }\\n\\n    h2 {\\n      font-size: 18px;\\n      margin: 0;\\n    }\\n\\n    p {\\n      font-size: 16px;\\n    }\\n\\n    /* Layout */\\n    .wrapper {\\n      width: 100%;\\n      table-layout: fixed;\\n    }\\n\\n    .main {\\n      margin: 0 auto;\\n      width: 100%;\\n      max-width: 600px;\\n      border-spacing: 0;\\n      font-family: 'Red Hat Display';\\n      background-color: #ffffff;\\n      color: #363636;\\n    }\\n\\n    .content-padding {\\n      padding: 16px;\\n    }\\n\\n    .two-columns {\\n      text-align: center;\\n      font-size: 0;\\n      width: 100%;\\n      padding: 8px;\\n    }\\n\\n    .two-columns .column {\\n      width: 100%;\\n      max-width: 250px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .two-columns .padding {\\n      padding: 8px 0;\\n    }\\n\\n    .two-columns .content {\\n      font-size: 16px;\\n    }\\n\\n    .two-columns .padding td {\\n      width: 250px;\\n    }\\n\\n    .three-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .three-columns .column {\\n      width: 100%;\\n      max-width: 180px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .three-columns .padding {\\n      width: 180px;\\n      padding: 8px 0;\\n      text-align: center;\\n    }\\n\\n    .three-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .three-columns .padding td {\\n      width: 180px;\\n    }\\n\\n    .four-columns {\\n      text-align: center;\\n      font-size: 0;\\n      padding: 8px;\\n    }\\n\\n    .four-columns .column {\\n      width: 100%;\\n      max-width: 130px;\\n      display: inline-block;\\n      vertical-align: top;\\n      padding: 0 16px;\\n    }\\n\\n    .four-columns .padding {\\n      width: 130px;\\n      padding: 16px 0;\\n      text-align: center;\\n    }\\n\\n    .four-columns .content {\\n      font-size: 13px;\\n    }\\n\\n    .four-columns .padding td {\\n      width: 130px;\\n    }\\n\\n    /* Components */\\n    .title {\\n      color: #262626;\\n      font-weight: normal;\\n      margin: 0;\\n      padding-bottom: 16px;\\n      text-align: center;\\n    }\\n\\n    .otp-color {\\n      color: #262626;\\n    }\\n\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p {\\n      text-align: center;\\n    }\\n\\n    .order-details p {\\n      text-align: left;\\n    }\\n\\n    .divider {\\n      font-size: 0;\\n      border-bottom: 1px solid #cccccc;\\n      background: none;\\n      height: 1px;\\n    }\\n\\n    .cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 8px;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      background: #5BC2F4 !important;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: bold;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta {\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      color: #ffffff !important;\\n      border-radius: 0px;\\n      width: 154px;\\n      font-size: 14px;\\n      padding: 10px 40px;\\n      display: inline-block;\\n      background: #DC0000;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: 500;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .tryg-cta-light {\\n      color: #DC0000 !important;\\n      background-color: transparent;\\n      border: 1px solid #DC0000 !important;\\n      border-radius: 0px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    .cta-light {\\n      color: #5BC2F4 !important;\\n      background-color: transparent;\\n      border: 1px solid #5BC2F4 !important;\\n      border-radius: 8px;\\n      text-decoration: none;\\n      -webkit-text-size-adjust: none;\\n      -ms-text-size-adjust: none;\\n      font-size: 14px;\\n      padding: 10px 20px;\\n      display: inline-block;\\n      font-family: verdana, geneva, sans-serif;\\n      font-weight: normal;\\n      font-style: normal;\\n      line-height: 17px;\\n      width: auto;\\n      text-align: center;\\n      margin: auto;\\n    }\\n\\n    /* Footer Components */\\n    a.footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-action {\\n      text-decoration: none;\\n      color: #666666;\\n      font-size: 12px;\\n    }\\n\\n    .footer-links td {\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .footer-links-mobile {\\n      display: none;\\n    }\\n\\n    .social-links>td {\\n      text-align: center;\\n      padding: 4px;\\n    }\\n\\n    .order-details {\\n      padding: 0px 16px;\\n      margin: 0;\\n      text-align: left;\\n      background-color: #F2F2F2;\\n    }\\n\\n    .rounded-image {\\n      border-radius: 16px;\\n    }\\n\\n    .full-box {\\n      background-color: #F5F5F5;\\n      padding: 0 16px;\\n      margin: 16px 0;\\n    }\\n\\n    .financing-section {\\n      background-color: #F5F5F5;\\n      vertical-align: top;\\n    }\\n\\n    .trade-in-section {\\n      width: 100%;\\n      background-color: #e6e6e6;\\n      text-align: left;\\n      padding: 8px 48px;\\n      vertical-align: top;\\n    }\\n\\n    .finansiering-text {\\n      color: #101112;\\n      font-size: 12px;\\n      font-weight: 600;\\n      text-align: center;\\n      white-space: nowrap;\\n    }\\n\\n    .finansiering-logo {\\n      width: 100%;\\n      object-fit: contain !important;\\n    }\\n\\n    .not-santander-logo {\\n      width: 100%;\\n      height: 20px !important;\\n      object-fit: contain !important;\\n    }\\n\\n    a.nostyle:link {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    a.nostyle:visited {\\n      text-decoration: inherit;\\n      color: inherit;\\n      cursor: auto;\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .two-columns .column {\\n        max-width: 500px;\\n      }\\n\\n      .footer-links {\\n        display: none;\\n      }\\n\\n      .footer-links-mobile {\\n        display: table-row;\\n        width: 100%;\\n      }\\n\\n      .footer-links-mobile td {\\n        width: 50%;\\n        text-align: center;\\n      }\\n\\n      .mobile-center {\\n        text-align: center !important;\\n      }\\n\\n      .finansiering-text {\\n        text-align: left;\\n      }\\n\\n      .trade-in-section {\\n        padding: 8px 32px;\\n      }\\n    }\\n  </style>\");",
									"        });",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let sales_email = pm.collectionVariables.get('order_sales_email_new');",
									"let order_id = pm.collectionVariables.get('order_id');",
									"",
									"utilFunctions.findEmail(pm, setTimeout, sales_email, 'DealerAssignedToOrder', order_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Token",
								"value": "ba0f540fb9177ca801bfabc78216e6a3",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotifications {\n  getNotifications(\n    recipients: [\"{{order_sales_email_new}}\"]\n    notificationIds: [\"DealerAssignedToOrder\"]\n    page: 1\n    perPage: 1\n  ) {\n    nodes {\n      id\n      notificationId\n      type\n      sender\n      recipient\n      text\n      targetSiteId\n      data {\n        email {\n          subject\n          html\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{api-url}}",
							"host": [
								"{{api-url}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Get variables according to environment (dev/demo)",
					"const url = pm.environment.get('seezpad_api');",
					"const email = pm.environment.get('seezpad_user');",
					"const token = pm.environment.get('refresh_token');",
					"",
					"// Request payload to login",
					"const login = {",
					"    url: `${url}/auth/otp?email=${email}`,",
					"    method: 'GET',",
					"};",
					"",
					"// Request payload to refresh token",
					"const refresh_token = {",
					"    url: `${url}/auth/authenticate/`,",
					"    method: 'POST',",
					"    header: 'Content-Type: application/json',",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            \"email\": \"arleta@seez.co\",",
					"            \"otp\": \"3FF576\",",
					"            \"marketing\": true",
					"        })",
					"    }",
					"};",
					"",
					"// Request payload to get access token",
					"const get_access_token = {",
					"    url: `${url}/auth/refresh`,",
					"    method: 'POST',",
					"    header: 'Content-Type: application/json',",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            \"refreshToken\": `${token}`",
					"            })",
					"    }",
					"};",
					"",
					"// Send login request",
					"pm.sendRequest(login, function (err) {",
					"    if (err) {",
					"        console.log(err);",
					"    } else {",
					"        // Refresh token",
					"        pm.sendRequest(refresh_token, function (refreshErr, refreshRes) {",
					"            if (refreshErr) {",
					"                console.log(refreshErr);",
					"            } else {",
					"                var refreshData = refreshRes.json();",
					"                // Store refresh token",
					"                pm.environment.set('refresh_token', refreshData.refreshToken);",
					"",
					"                // Get access token",
					"                pm.sendRequest(get_access_token, function (accessErr, accessRes) {",
					"                    if (accessErr) {",
					"                        console.log(accessErr);",
					"                    } else {",
					"                        var accessData = accessRes.json();",
					"                        // Store access token",
					"                        pm.environment.set('access_token', accessData.accessToken);",
					"                    }",
					"                });",
					"            }",
					"        });",
					"    }",
					"});",
					"",
					"// Reusable function to look for the right email",
					"utilFunctions = {",
					"    findEmail(pm, setTimeutFunc, recipient, notificationId, keyword) {",
					"",
					"        const maxRetries = 7; // Set the maximum number of retries",
					"        let retryCount = 0;",
					"",
					"        function sendRequestWithRetry() {",
					"            ",
					"            // Stop retrying after maxRetries",
					"            if (retryCount >= maxRetries) {",
					"                pm.collectionVariables.set('is_email_found', 'false');",
					"                console.log(`Max retry reached. Email not found for test data id ${keyword}`);",
					"                pm.test.skip(`Email not found for test data id ${keyword}`)",
					"                return;",
					"            }",
					"",
					"            // Payload to get the email",
					"            const requestObject = {",
					"                    url: pm.environment.get('api-url'),",
					"                    method: 'POST',",
					"                    header: {",
					"                        'Authorization': `Bearer ${pm.environment.get('access_token')}`,",
					"                        'Content-Type': 'application/json'",
					"                    },",
					"                    body: {",
					"                        mode: 'raw',",
					"                        raw: JSON.stringify({",
					"                            query: `query getNotifications {",
					"                                getNotifications(",
					"                                    recipients: [\"${recipient}\"],",
					"                                    notificationIds: [\"${notificationId}\"],",
					"                                    page: 1,",
					"                                    perPage: 1",
					"                                ) {",
					"                                    nodes {",
					"                                        id",
					"                                        data {",
					"                                            email {",
					"                                                html",
					"                                            }",
					"                                        }",
					"                                    }",
					"                                }",
					"                            }`",
					"                        })",
					"                    }",
					"                };",
					"",
					"            // Send the request to get the email",
					"            pm.sendRequest(requestObject, function (err, response) {",
					"                if (err) {",
					"                    console.log('Error:', err);",
					"                } else {",
					"                    const notifications = response.json().data?.getNotifications?.nodes || [];",
					"                    // Check if any email is returned, if not, keep retrying",
					"                    if (notifications.length === 0) {",
					"                        console.log('No email is found for this user, retrying...');",
					"                        retryCount++;",
					"                        setTimeutFunc(sendRequestWithRetry, 5000); // Retry after 5 seconds",
					"                    } else {",
					"                        // Check if found email contains a specific keyword, if not, keep retrying",
					"                        if (notifications[0].data.email.html.includes(keyword)) {      ",
					"                            pm.collectionVariables.set('is_email_found', 'true');",
					"                            console.log('Email is found, ID:', response.json().data.getNotifications.nodes[0].id);",
					"                        } else {",
					"                            console.log('Email with specified keyword is not found, retrying...');",
					"                            retryCount++;",
					"                            setTimeutFunc(sendRequestWithRetry, 5000); // Retry after 5 seconds",
					"                        }",
					"                    }",
					"                }",
					"            });",
					"        }",
					"",
					"        // Start the initial request",
					"        sendRequestWithRetry();",
					"    }",
					"};"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "customer_email",
			"value": "arleta+testemail@seez.co",
			"type": "string"
		},
		{
			"key": "retail_lead_listing_ref",
			"value": "551239",
			"type": "string"
		},
		{
			"key": "lease_lead_listing_ref",
			"value": "550524",
			"type": "string"
		},
		{
			"key": "wholesale_lead_listing_ref",
			"value": "552773",
			"type": "string"
		},
		{
			"key": "test_drive_listing_ref",
			"value": "548297",
			"type": "string"
		},
		{
			"key": "tradein_listing_ref",
			"value": "550026",
			"type": "string"
		},
		{
			"key": "order_listing_ref",
			"value": "550026",
			"type": "string"
		},
		{
			"key": "contact_support",
			"value": "+4572116000",
			"type": "string"
		},
		{
			"key": "privacy",
			"value": "https://www.starmark.dk/persondata-politik/",
			"type": "string"
		},
		{
			"key": "my_profile",
			"value": "https://www.starmark.dk/min/konto",
			"type": "string"
		},
		{
			"key": "copyright",
			"value": "Copyright Starmark - Alle rettigheder forbeholdes",
			"type": "string"
		},
		{
			"key": "starmark_logo",
			"value": "https://www.seez.dk/emails/starmarklogo.png",
			"type": "string"
		},
		{
			"key": "starmark_logo_url",
			"value": "https://www.starmark.dk/",
			"type": "string"
		},
		{
			"key": "email_sender",
			"value": "info@starmark.dk",
			"type": "string"
		},
		{
			"key": "test_drive_date",
			"value": "17-08-2023",
			"type": "string"
		},
		{
			"key": "test_drive_time",
			"value": "10:00",
			"type": "string"
		},
		{
			"key": "test_drive_date_iso",
			"value": "2023-08-17T08:00:00.000Z",
			"type": "string"
		},
		{
			"key": "tradein_offer_amount",
			"value": "80000",
			"type": "string"
		},
		{
			"key": "tradein_outstanding",
			"value": "20000",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": ""
		},
		{
			"key": "retail_lead_listing_id",
			"value": ""
		},
		{
			"key": "leasing_lead_listing_id",
			"value": ""
		},
		{
			"key": "wholesale_lead_listing_id",
			"value": ""
		},
		{
			"key": "test_drive_listing_id",
			"value": ""
		},
		{
			"key": "tradein_listing_id",
			"value": ""
		},
		{
			"key": "order_listing_id",
			"value": ""
		},
		{
			"key": "retail_lead_id",
			"value": ""
		},
		{
			"key": "retail_lead_comment",
			"value": ""
		},
		{
			"key": "customer_name",
			"value": ""
		},
		{
			"key": "customer_phone",
			"value": ""
		},
		{
			"key": "retail_sales_id_old",
			"value": ""
		},
		{
			"key": "retail_sales_email_old",
			"value": ""
		},
		{
			"key": "retail_sales_name_old",
			"value": ""
		},
		{
			"key": "dealer_id",
			"value": ""
		},
		{
			"key": "dealer_name",
			"value": ""
		},
		{
			"key": "retail_lead_listing_name",
			"value": ""
		},
		{
			"key": "source",
			"value": ""
		},
		{
			"key": "retail_sales_id_new",
			"value": ""
		},
		{
			"key": "retail_sales_email_new",
			"value": ""
		},
		{
			"key": "retail_sales_name_new",
			"value": ""
		},
		{
			"key": "leasing_lead_id",
			"value": ""
		},
		{
			"key": "leasing_lead_comment",
			"value": ""
		},
		{
			"key": "leasing_sales_id_old",
			"value": ""
		},
		{
			"key": "leasing_sales_email_old",
			"value": ""
		},
		{
			"key": "leasing_sales_name_old",
			"value": ""
		},
		{
			"key": "leasing_lead_listing_name",
			"value": ""
		},
		{
			"key": "leasing_sales_id_new",
			"value": ""
		},
		{
			"key": "leasing_sales_email_new",
			"value": ""
		},
		{
			"key": "leasing_sales_name_new",
			"value": ""
		},
		{
			"key": "wholesale_lead_id",
			"value": ""
		},
		{
			"key": "wholesale_lead_comment",
			"value": ""
		},
		{
			"key": "wholesale_sales_id_old",
			"value": ""
		},
		{
			"key": "wholesale_sales_email_old",
			"value": ""
		},
		{
			"key": "wholesale_sales_name_old",
			"value": ""
		},
		{
			"key": "wholesale_lead_listing_name",
			"value": ""
		},
		{
			"key": "wholesale_sales_id_new",
			"value": ""
		},
		{
			"key": "wholesale_sales_email_new",
			"value": ""
		},
		{
			"key": "wholesale_sales_name_new",
			"value": ""
		},
		{
			"key": "test_drive_id",
			"value": ""
		},
		{
			"key": "test_drive_sales_email_old",
			"value": ""
		},
		{
			"key": "test_drive_sales_name_old",
			"value": ""
		},
		{
			"key": "test_drive_listing_name",
			"value": ""
		},
		{
			"key": "test_drive_listing_vin",
			"value": ""
		},
		{
			"key": "test_drive_sales_id_new",
			"value": ""
		},
		{
			"key": "test_drive_sales_email_new",
			"value": ""
		},
		{
			"key": "test_drive_sales_name_new",
			"value": ""
		},
		{
			"key": "test_drive_listing_model",
			"value": ""
		},
		{
			"key": "tradein_id",
			"value": ""
		},
		{
			"key": "tradein_sales_email_old",
			"value": ""
		},
		{
			"key": "tradein_sales_name_old",
			"value": ""
		},
		{
			"key": "tradein_listing_dealer_id",
			"value": ""
		},
		{
			"key": "tradein_listing_name",
			"value": ""
		},
		{
			"key": "tradein_listing_variant",
			"value": ""
		},
		{
			"key": "tradein_listing_year",
			"value": ""
		},
		{
			"key": "tradein_listing_source",
			"value": ""
		},
		{
			"key": "tradein_car_make",
			"value": ""
		},
		{
			"key": "tradein_car_model",
			"value": ""
		},
		{
			"key": "tradein_car_variant",
			"value": ""
		},
		{
			"key": "tradein_car_year",
			"value": ""
		},
		{
			"key": "tradein_total_amount",
			"value": ""
		},
		{
			"key": "tradein_sales_id_new",
			"value": ""
		},
		{
			"key": "tradein_sales_email_new",
			"value": ""
		},
		{
			"key": "tradein_sales_name_new",
			"value": ""
		},
		{
			"key": "order_id",
			"value": ""
		},
		{
			"key": "order_sales_id_old",
			"value": ""
		},
		{
			"key": "order_sales_email_old",
			"value": ""
		},
		{
			"key": "order_sales_name_old",
			"value": ""
		},
		{
			"key": "order_dealer_id",
			"value": ""
		},
		{
			"key": "order_source",
			"value": ""
		},
		{
			"key": "order_listing_make",
			"value": ""
		},
		{
			"key": "order_listing_model",
			"value": ""
		},
		{
			"key": "order_listing_year",
			"value": ""
		},
		{
			"key": "order_listing_showroom",
			"value": ""
		},
		{
			"key": "order_listing_dealership_id",
			"value": ""
		},
		{
			"key": "customer_insurance",
			"value": ""
		},
		{
			"key": "customer_cpr",
			"value": ""
		},
		{
			"key": "customer_address_street",
			"value": ""
		},
		{
			"key": "customer_address_street2",
			"value": ""
		},
		{
			"key": "customer_address_street_name",
			"value": ""
		},
		{
			"key": "customer_address_street_no",
			"value": ""
		},
		{
			"key": "customer_address_country",
			"value": ""
		},
		{
			"key": "customer_address_postcode",
			"value": ""
		},
		{
			"key": "customer_address_city",
			"value": ""
		},
		{
			"key": "order_tradein_id",
			"value": ""
		},
		{
			"key": "order_tradein_outstanding",
			"value": ""
		},
		{
			"key": "order_delivery_showroom_id",
			"value": ""
		},
		{
			"key": "order_delivery_address",
			"value": ""
		},
		{
			"key": "order_delivery_type",
			"value": ""
		},
		{
			"key": "order_tradein_offer",
			"value": ""
		},
		{
			"key": "order_tradein_total",
			"value": ""
		},
		{
			"key": "order_transferrable_amount",
			"value": ""
		},
		{
			"key": "next_date",
			"value": ""
		},
		{
			"key": "next_date_formatted",
			"value": ""
		},
		{
			"key": "order_sales_id_new",
			"value": ""
		},
		{
			"key": "order_sales_email_new",
			"value": ""
		},
		{
			"key": "order_sales_name_new",
			"value": ""
		},
		{
			"key": "is_email_found",
			"value": ""
		}
	]
}